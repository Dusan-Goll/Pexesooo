class GameRun extends GameEnd{constructor(){super(),this.firstCard="unflipped",this.secondCard="unflipped",this.colors=["Blue","Red","Green","Yellow"],this.players=this.colors.slice(0,this.playersNumber),this.actualPlayer=this.players[0],this.handleClick=this.handleClick.bind(this)}activate(){this.deck.forEach(t=>this.addListenerTo(t))}addListenerTo(t){t.addEventListener("click",this.handleClick)}removeListenerFrom(t){t.removeEventListener("click",this.handleClick)}handleClick(t){this.flip(t.target)}flip(t){"unflipped"===this.firstCard?(this.firstCard=t,this.showCardBack(this.firstCard),this.disableClick(this.firstCard)):"unflipped"===this.secondCard?(this.secondCard=t,this.showCardBack(this.secondCard),this.enableClick(this.firstCard),this.shine(this.firstCard),this.shine(this.secondCard),this.otherCards().forEach(t=>{this.disableClick(t)})):this.compare(this.firstCard,this.secondCard),this.isEmptyDesk()&&this.gameEnding()}showCardBack(t){t.querySelector("img").setAttribute("class","card-back-visible")}showCardFront(t){t.querySelector("img").setAttribute("class","card-back-hidden")}disableClick(t){this.removeListenerFrom(t),t.setAttribute("class","card not-clickable")}enableClick(t){this.addListenerTo(t),t.setAttribute("class","card")}shine(t){t.querySelector("img").setAttribute("class","card-back-visible shining")}otherCards(){return Array.prototype.slice.call(this.deck).filter(t=>t!==this.firstCard&&t!==this.secondCard)}compare(t,e){let s;t.querySelector("img").getAttribute("src")==e.querySelector("img").getAttribute("src")?(this.discard(),this.increaseScoreTo(this.actualPlayer)):(this.flipBack(),this.nextPlayer()),this.otherCards().forEach(t=>{this.enableClick(t)}),this.firstCard=this.secondCard="unflipped"}discard(){this.deck=this.otherCards(),this.vacantize(this.firstCard),this.vacantize(this.secondCard)}vacantize(t){let e=document.createElement("div");e.setAttribute("class","vacant"),t.replaceWith(e)}increaseScoreTo(t){let e=this.scoreBoxes.find(e=>e.id===t).querySelector("p"),s=Number(e.textContent);s+=1,e.textContent=s}flipBack(){this.showCardFront(this.firstCard),this.showCardFront(this.secondCard)}nextPlayer(){let t=this.players.indexOf(this.actualPlayer);t<this.players.length-1?this.actualPlayer=this.players[t+1]:this.actualPlayer=this.players[0],this.switchScoreBoxTo(this.actualPlayer)}switchScoreBoxTo(t){this.scoreBoxes.find(e=>e.id===t).setAttribute("class","score-box playing");this.scoreBoxes.filter(e=>e.id!==t).forEach(t=>t.setAttribute("class","score-box not-playing"))}isEmptyDesk(){return 0==this.cardsOnTheDesk()}cardsOnTheDesk(){return this.desk.getElementsByClassName("card").length}}let game=new GameRun;game.prepare(),game.activate();